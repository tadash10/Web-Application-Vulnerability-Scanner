import requests
from bs4 import BeautifulSoup

class WebVulnerabilityScanner:
    def __init__(self):
        self.session = requests.Session()
        self.detected_vulnerabilities = []

    def scan_sql_injection(self, url):
        try:
            response = self.session.get(url)

            if response.status_code == 200:
                soup = BeautifulSoup(response.text, 'html.parser')
                input_fields = soup.find_all('input', {'type': 'text'})

                payloads = ["' OR 1=1 --", "' OR 'a'='a"]

                for field in input_fields:
                    field_name = field.get('name')
                    if field_name:
                        for payload in payloads:
                            data = {field_name: payload}
                            response_with_payload = self.session.get(url, params=data)

                            if "error" in response_with_payload.text.lower():
                                vulnerability = {
                                    "vulnerability_type": "SQL Injection",
                                    "field_name": field_name,
                                    "payload": payload,
                                    "target_url": url,
                                }
                                self.detected_vulnerabilities.append(vulnerability)
                                print(f"Potential SQL Injection vulnerability detected in input field '{field_name}' with payload: {payload}")

            else:
                print(f"Failed to retrieve data from {url}. Status code: {response.status_code}")

        except Exception as e:
            print(f"An error occurred: {str(e)}")

    def report_vulnerabilities(self):
        print("\nDetected Vulnerabilities:")
        for vulnerability in self.detected_vulnerabilities:
            print(f"Vulnerability Type: {vulnerability['vulnerability_type']}")
            print(f"Field Name: {vulnerability['field_name']}")
            print(f"Payload: {vulnerability['payload']}")
            print(f"Target URL: {vulnerability['target_url']}")
            print("-" * 50)

if __name__ == "__main__":
    scanner = WebVulnerabilityScanner()
    target_url = input("Enter the URL of the web application to scan for SQL Injection: ")
    scanner.scan_sql_injection(target_url)
    scanner.report_vulnerabilities()
